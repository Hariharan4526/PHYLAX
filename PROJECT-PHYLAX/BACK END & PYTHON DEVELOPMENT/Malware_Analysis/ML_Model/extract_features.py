import sqlite3
import pandas as pd
import numpy as np 
import os
import ipaddress

def calculate_entropy(data):
    if not data or data == 'N/A':
        return 0
    try:
        byte_data = bytes.fromhex(data.replace(':', ''))
        probabilities = [float(byte_data.count(b)) / len(byte_data) for b in set(byte_data)]
        entropy = -sum(p * np.log2(p) for p in probabilities)
        return round(entropy, 4)
    except ValueError:
        return 0

def ip_to_int(ip):
    try:
        return int(ipaddress.IPv4Address(ip))
    except:
        return 0

def extract_features():
    db_path = os.path.join(os.path.dirname(__file__), '..', 'database', 'phylax.db')
    conn = sqlite3.connect(db_path)
    query = "SELECT source, destination, protocol, length, payload, label FROM packets"
    df = pd.read_sql_query(query, conn)
    conn.close()

    protocol_map = {'TCP': 1, 'UDP': 2, 'ICMP': 3}
    df['protocol'] = df['protocol'].map(protocol_map).fillna(0)
    df['source'] = df['source'].apply(ip_to_int)
    df['destination'] = df['destination'].apply(ip_to_int)
    df['payload_entropy'] = df['payload'].apply(calculate_entropy)
    df.drop(columns=['payload'], inplace=True)

    return df

features = extract_features()