import pyshark
import os
import sqlite3
from datetime import datetime

def insert_packet(time, src, dest, protocol, length, payload):
    conn = sqlite3.connect(os.path.join(os.path.dirname(__file__), '..', 'database', 'phylax.db'))
    cursor = conn.cursor()
    cursor.execute('''
        INSERT INTO packets (time, source, destination, protocol, length, payload)
        VALUES (?, ?, ?, ?, ?, ?)
    ''', (time, src, dest, protocol, length, payload))
    conn.commit()
    conn.close()

def capture_and_save():
    interface_file = os.path.join(os.path.dirname(__file__), 'interface_config.txt')

    if os.path.exists(interface_file):
        with open(interface_file, 'r') as f:
            interface = f.read().strip()
    else:
        interface = 'Wi-Fi'
        with open(interface_file, 'w') as f:
            f.write(interface)

    capture = pyshark.LiveCapture(interface=interface)
    print(f"Sniffing on {interface}... Press Ctrl+C to stop.")

    for packet in capture.sniff_continuously():
        try:
            src = packet.ip.src
            dest = packet.ip.dst
            protocol = packet.transport_layer
            length = packet.length
            time = packet.sniff_time.strftime('%Y-%m-%d %H:%M:%S')

            if protocol == 'TCP' and hasattr(packet, 'tcp'):
                payload = packet.tcp.payload
            elif protocol == 'UDP' and hasattr(packet, 'udp'):
                payload = packet.udp.payload
            elif hasattr(packet, 'data'):
                payload = packet.data.data
            else:
                payload = 'N/A'

            insert_packet(time, src, dest, protocol, length, payload)
            print(f"[+] Packet logged at {time}")

        except AttributeError:
            continue

capture_and_save()